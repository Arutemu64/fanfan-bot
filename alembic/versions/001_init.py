"""init

Revision ID: 001
Revises: 
Create Date: 2023-09-23 14:10:55.908653

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('VISITOR', 'HELPER', 'ORG', name='userrole').create(op.get_bind())
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_achievements'))
    )
    op.create_table('nominations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('votable', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nominations')),
    sa.UniqueConstraint('title', name=op.f('uq_nominations_title'))
    )
    op.create_table('settings',
    sa.Column('id', sa.Integer(), server_default='1', nullable=False),
    sa.Column('voting_enabled', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('announcement_timestamp', sa.Float(), server_default='0', nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_settings'))
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('role', postgresql.ENUM('VISITOR', 'HELPER', 'ORG', name='userrole', create_type=False), server_default='VISITOR', nullable=False),
    sa.Column('items_per_page', sa.Integer(), server_default='5', nullable=False),
    sa.Column('receive_all_announcements', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('points', sa.Integer(), server_default='0', nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('participants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('nomination_id', sa.String(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['nomination_id'], ['nominations.id'], name=op.f('fk_participants_nomination_id_nominations'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_participants'))
    )
    op.create_index(op.f('ix_participants_title'), 'participants', ['title'], unique=True)
    op.create_table('received_achievements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], name=op.f('fk_received_achievements_achievement_id_achievements'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_received_achievements_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_received_achievements'))
    )
    op.create_table('tickets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('role', postgresql.ENUM('VISITOR', 'HELPER', 'ORG', name='userrole', create_type=False), server_default='VISITOR', nullable=False),
    sa.Column('used_by_id', sa.BigInteger(), nullable=True),
    sa.Column('issued_by_id', sa.BigInteger(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['issued_by_id'], ['users.id'], name=op.f('fk_tickets_issued_by_id_users'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['used_by_id'], ['users.id'], name=op.f('fk_tickets_used_by_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tickets'))
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('from_user_id', sa.BigInteger(), nullable=False),
    sa.Column('to_user_id', sa.BigInteger(), nullable=False),
    sa.Column('points_added', sa.Integer(), nullable=True),
    sa.Column('achievement_id_added', sa.Integer(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id_added'], ['achievements.id'], name=op.f('fk_transactions_achievement_id_added_achievements'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.id'], name=op.f('fk_transactions_from_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.id'], name=op.f('fk_transactions_to_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transactions'))
    )
    op.execute("CREATE SEQUENCE schedule_position_seq")
    op.create_table('schedule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('position', sa.Integer(), server_default=sa.text("nextval('schedule_position_seq')"), nullable=False),
    sa.Column('real_position', sa.Integer(), nullable=True),
    sa.Column('participant_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('skip', sa.Boolean(), server_default='False', nullable=True),
    sa.Column('current', sa.Boolean(), nullable=True),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name=op.f('fk_schedule_participant_id_participants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedule')),
    sa.UniqueConstraint('current', name=op.f('uq_schedule_current')),
    sa.UniqueConstraint('position', name=op.f('uq_schedule_position')),
    sa.UniqueConstraint('real_position', name=op.f('uq_schedule_real_position'))
    )
    op.create_table('votes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('participant_id', sa.Integer(), nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['participant_id'], ['participants.id'], name=op.f('fk_votes_participant_id_participants'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_votes_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_votes'))
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('counter', sa.Integer(), server_default='5', nullable=False),
    sa.Column('time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['schedule.id'], name=op.f('fk_subscriptions_event_id_schedule'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_subscriptions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_subscriptions'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscriptions')
    op.drop_table('votes')
    op.drop_table('schedule')
    op.execute("DROP SEQUENCE schedule_position_seq")
    op.drop_table('transactions')
    op.drop_table('tickets')
    op.drop_table('received_achievements')
    op.drop_index(op.f('ix_participants_title'), table_name='participants')
    op.drop_table('participants')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('settings')
    op.drop_table('nominations')
    op.drop_table('achievements')
    sa.Enum('VISITOR', 'HELPER', 'ORG', name='userrole').drop(op.get_bind())
    # ### end Alembic commands ###
