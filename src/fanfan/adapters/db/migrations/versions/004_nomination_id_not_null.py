"""nomination_id_not_null

Revision ID: 004
Revises: 003
Create Date: 2024-12-23 18:58:01.028071

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "004"
down_revision = "003"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TABLE participants ALTER COLUMN scoped_id DROP IDENTITY")
    op.alter_column(
        "participants", "nomination_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.alter_column(
        "participants", "scoped_id", nullable=True, new_column_name="voting_number"
    )
    op.drop_constraint(
        "fk_participants_nomination_id_nominations", "participants", type_="foreignkey"
    )
    op.create_foreign_key(
        op.f("fk_participants_nomination_id_nominations"),
        "participants",
        "nominations",
        ["nomination_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("participants", "voting_number", new_column_name="scoped_id")
    op.execute(
        "ALTER TABLE participants "
        "ALTER scoped_id SET NOT NULL, "
        "ALTER scoped_id ADD GENERATED ALWAYS AS IDENTITY (START 1)"
    )
    op.drop_constraint(
        op.f("fk_participants_nomination_id_nominations"),
        "participants",
        type_="foreignkey",
    )
    op.create_foreign_key(
        "fk_participants_nomination_id_nominations",
        "participants",
        "nominations",
        ["nomination_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.alter_column(
        "participants", "nomination_id", existing_type=sa.INTEGER(), nullable=True
    )
    # ### end Alembic commands ###
