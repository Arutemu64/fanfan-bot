"""schedule_change

Revision ID: 008
Revises: 007
Create Date: 2025-01-24 20:05:54.771285

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "008"
down_revision = "007"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "SET_AS_CURRENT", "MOVED", "SKIPPED", "UNSKIPPED", name="schedulechangetype"
    ).create(op.get_bind())
    op.create_table(
        "schedule_changes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            postgresql.ENUM(
                "SET_AS_CURRENT",
                "MOVED",
                "SKIPPED",
                "UNSKIPPED",
                name="schedulechangetype",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("changed_event_id", sa.Integer(), nullable=True),
        sa.Column("argument_event_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.BigInteger(), nullable=True),
        sa.Column("send_global_announcement", sa.Boolean(), nullable=False),
        sa.Column("mailing_id", sa.String(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["argument_event_id"],
            ["schedule.id"],
            name=op.f("fk_schedule_changes_argument_event_id_schedule"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["changed_event_id"],
            ["schedule.id"],
            name=op.f("fk_schedule_changes_changed_event_id_schedule"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_schedule_changes_user_id_users"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_schedule_changes")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("schedule_changes")
    sa.Enum(
        "SET_AS_CURRENT", "MOVED", "SKIPPED", "UNSKIPPED", name="schedulechangetype"
    ).drop(op.get_bind())
    # ### end Alembic commands ###
