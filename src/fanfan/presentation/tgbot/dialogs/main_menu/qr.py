from aiogram_dialog import DialogManager, Window
from aiogram_dialog.widgets.kbd import SwitchTo, WebApp
from aiogram_dialog.widgets.media import StaticMedia
from aiogram_dialog.widgets.text import Const, Format
from dishka import AsyncContainer

from fanfan.adapters.config.models import Configuration
from fanfan.application.codes.get_user_code_id import GetUserCodeId
from fanfan.core.utils.code import get_qr_code_image
from fanfan.presentation.tgbot import states
from fanfan.presentation.tgbot.static import strings


async def qr_window_getter(
    dialog_manager: DialogManager,
    container: AsyncContainer,
    **kwargs,
) -> dict:
    config: Configuration = await container.get(Configuration)
    get_user_code: GetUserCodeId = await container.get(GetUserCodeId)

    return {
        "qr_file_path": get_qr_code_image(await get_user_code()),
        "qr_scanner_url": config.web.build_qr_scanner_url() if config.web else None,
    }


qr_window = Window(
    StaticMedia(path=Format("{qr_file_path}")),
    Const(
        "üé´ –≠—Ç–æ —Ç–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π QR-–∫–æ–¥. –ü–æ–∫–∞–∂–∏ –µ–≥–æ –≤–æ–ª–æ–Ω—Ç—ë—Ä—É, "
        "—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—á–∫–∏ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –∫–≤–µ—Å—Ç–µ.\n\n"
        "üì∏ –ò—â–∏ –∏ —Å–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥—ã –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è."
    ),
    WebApp(
        Const("üì∏ –û—Ç–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä"),
        url=Format("{qr_scanner_url}"),
        when="qr_scanner_url",
    ),
    SwitchTo(Const(strings.buttons.back), id="back", state=states.Main.HOME),
    getter=qr_window_getter,
    state=states.Main.QR_CODE,
)
