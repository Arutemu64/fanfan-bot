import asyncio
from contextlib import suppress

from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.kbd import Button
from sqlalchemy import and_

from src.bot.dialogs.schedule.common import set_current_schedule_page
from src.bot.dialogs.schedule.tools.common import throttle_announcement
from src.bot.ui import strings
from src.bot.utils import notifier
from src.db import Database
from src.db.models import Event


async def set_next_event(
    callback: CallbackQuery, button: Button, manager: DialogManager
):
    db: Database = manager.middleware_data["db"]

    # –¢–∞–π–º–∞—É—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –∞–Ω–æ–Ω—Å–æ–≤
    if await throttle_announcement(manager.middleware_data["settings"]):
        pass
    else:
        await callback.answer(strings.errors.announce_too_fast, show_alert=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏ —Å–ª–µ–¥—É—é—â–µ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è, —Å–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ —Å —Ç–µ–∫—É—â–µ–≥–æ
    current_event = await db.event.get_current()
    if current_event:
        next_event = await db.event.get_next(current_event)
        if not next_event:
            await callback.answer("üëè –í—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!", show_alert=True)
            return
        current_event.current = None
        await db.session.flush([current_event])
    else:
        next_event = await db.event.get_by_position(1)

    # –û—Ç–º–µ—á–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –∫–∞–∫ —Ç–µ–∫—É—â–µ–µ
    next_event.current = True
    await db.session.commit()

    # –í—ã–≤–æ–¥–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    await callback.answer(
        f"‚úÖ {next_event.participant.title if next_event.participant else next_event.title}"
    )

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–æ–∫
    asyncio.create_task(
        notifier.proceed_subscriptions(bot=callback.bot, send_global_announcement=True)
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ —Ç–µ–∫—É—â–∏–º –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ–º
    await set_current_schedule_page(manager, next_event.id)
