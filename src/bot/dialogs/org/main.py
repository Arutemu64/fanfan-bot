from aiogram import F
from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager, Window
from aiogram_dialog.widgets.kbd import Button, Cancel, SwitchTo
from aiogram_dialog.widgets.text import Case, Const, Jinja

from src.bot.dialogs import states
from src.bot.structures import UserRole
from src.bot.ui import strings
from src.db import Database
from src.db.models import Event, Nomination, User

# fmt: off
StatsTemplate = Jinja(  # noqa
    "{% for info in bot_info %}"
        "{% if info.name %}"
            """<b>{{ info.name }}</b>: {{ info.value }}\n"""
        "{% else %}"
            "\n\n"
        "{% endif %}"
        "{% for sub in info.subs %}"
            """ {{ "‚îú‚îÄ" if not loop.last else "‚îî‚îÄ" }}<b>{{ sub.name }}</b>: {{ sub.value }}\n"""  # noqa: E501
        "{% endfor %}"
    """{% endfor %}"""
)
# fmt: on


async def org_menu_getter(db: Database, **kwargs):
    voting_enabled = await db.settings.get_voting_enabled()
    return {
        "voting_enabled": voting_enabled,
        "bot_info": (
            {
                "name": "üé´ –ë–∏–ª–µ—Ç–æ–≤",
                "value": await db.ticket.get_count(),
            },
            {
                "name": "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                "value": await db.user.get_count(),
                "subs": (
                    {
                        "name": "üëÄ –ó—Ä–∏—Ç–µ–ª–µ–π",
                        "value": await db.user.get_count(User.role == UserRole.VISITOR),
                    },
                    {
                        "name": "üì£ –í–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤",
                        "value": await db.user.get_count(User.role == UserRole.HELPER),
                    },
                    {
                        "name": "üßë‚Äçüç≥ –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤",
                        "value": await db.user.get_count(User.role == UserRole.ORG),
                    },
                ),
            },
            {
                "name": "üíÉ –í—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π",
                "value": await db.event.get_count(),
                "subs": (
                    {
                        "name": "ü´£ –ü—Ä–æ–ø—É—â–µ–Ω–æ",
                        "value": await db.event.get_count(Event.skip.is_(True)),
                    },
                ),
            },
            {
                "name": "üßë‚Äçüé§ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
                "value": await db.participant.get_count(),
            },
            {
                "name": "ü•à –ù–æ–º–∏–Ω–∞—Ü–∏–π",
                "value": await db.nomination.get_count(),
                "subs": (
                    {
                        "name": "ü•á –° –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º",
                        "value": await db.nomination.get_count(
                            Nomination.votable.is_(True)
                        ),
                    },
                ),
            },
            {
                "name": "üó£Ô∏è –ì–æ–ª–æ—Å–æ–≤",
                "value": await db.vote.get_count(),
            },
        ),
    }


async def switch_voting(
    callback: CallbackQuery, button: Button, manager: DialogManager
):
    db: Database = manager.middleware_data["db"]
    await db.settings.toggle_voting()


org_menu = Window(
    Const("<b>üîß –ú–µ–Ω—é –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞</b>\n"),
    Const("üî¢ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞:</b>\n"),
    StatsTemplate,
    SwitchTo(
        state=states.ORG.ASK_USERNAME,
        id="edit_user",
        text=Const("üë§‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
    ),
    SwitchTo(
        state=states.ORG.NEW_TICKET,
        id="new_ticket",
        text=Const("üé´ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –±–∏–ª–µ—Ç"),
    ),
    Button(
        text=Case(
            texts={
                True: Const(strings.buttons.disable_voting),
                False: Const(strings.buttons.enable_voting),
            },
            selector=F["voting_enabled"],
        ),
        id="switch_voting_button",
        on_click=switch_voting,
    ),
    Cancel(Const(strings.buttons.back)),
    state=states.ORG.MAIN,
    getter=org_menu_getter,
)
