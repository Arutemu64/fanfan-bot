import operator

from aiogram_dialog import Window
from aiogram_dialog.widgets.input import MessageInput, TextInput
from aiogram_dialog.widgets.kbd import Button, Cancel, Group, Multiselect, SwitchTo
from aiogram_dialog.widgets.media import DynamicMedia
from aiogram_dialog.widgets.text import Const, Format

from fanfan.common.enums import UserRole
from fanfan.presentation.tgbot import states
from fanfan.presentation.tgbot.dialogs.common.getters import roles_getter
from fanfan.presentation.tgbot.dialogs.common.widgets import Title
from fanfan.presentation.tgbot.ui import strings

from .constants import ID_QUEUE_ID_INPUT, ID_ROLES_PICKER
from .getters import create_delivery_getter
from .handlers import (
    delete_delivery_handler,
    delete_image_handler,
    message_handler,
    send_delivery_handler,
)

create_delivery_window = Window(
    Title(Const("‚úâÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏")),
    Format("–¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏: {notification_text}\n"),
    Const("<i>‚å®Ô∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç/—Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ.</i>"),
    DynamicMedia(
        selector="image",
        when="image",
    ),
    Button(
        id="delete_image",
        text=Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
        when="image",
        on_click=delete_image_handler,
    ),
    Button(
        id="visual",
        text=Const("–û—Ç–º–µ—Ç—å—Ç–µ –Ω—É–∂–Ω—ã–µ —Ä–æ–ª–∏:"),
    ),
    Group(
        Multiselect(
            Format("‚úì {item[2]}"),
            Format("{item[2]}"),
            id=ID_ROLES_PICKER,
            item_id_getter=operator.itemgetter(0),
            items="roles",
            type_factory=UserRole,
        ),
        width=2,
    ),
    Button(
        Const("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å"),
        id="send",
        on_click=send_delivery_handler,
        when="sending_allowed",
    ),
    MessageInput(
        func=message_handler,
    ),
    SwitchTo(
        Const(strings.buttons.back),
        id="back",
        state=states.DELIVERIES.MAIN,
    ),
    getter=[create_delivery_getter, roles_getter],
    state=states.DELIVERIES.CREATE,
)
delete_delivery_window = Window(
    Const("üóëÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Ä–∞—Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å"),
    TextInput(
        id=ID_QUEUE_ID_INPUT,
        type_factory=str,
        on_success=delete_delivery_handler,
    ),
    SwitchTo(
        Const(strings.buttons.back),
        id="back",
        state=states.DELIVERIES.MAIN,
    ),
    state=states.DELIVERIES.DELETE,
)
main_delivery_window = Window(
    Title(Const("‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∏")),
    SwitchTo(
        Const("üíå –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"),
        id="create_notification",
        state=states.DELIVERIES.CREATE,
    ),
    SwitchTo(
        Const("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"),
        id="delete_notification",
        state=states.DELIVERIES.DELETE,
    ),
    Cancel(id="org_main_window", text=Const(strings.buttons.back)),
    state=states.DELIVERIES.MAIN,
)
