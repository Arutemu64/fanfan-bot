"""order.

Revision ID: 011
Revises: 010
Create Date: 2024-04-22 18:40:26.659248

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "011"
down_revision = "010"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SEQUENCE achievements_order_seq")
    op.execute("CREATE SEQUENCE activities_order_seq")
    op.execute("CREATE SEQUENCE schedule_order_seq")
    op.execute("CREATE SEQUENCE participants_order_seq")
    op.add_column(
        "achievements",
        sa.Column(
            "order",
            sa.Float(),
            server_default=sa.text("nextval('achievements_order_seq')"),
            nullable=False,
        ),
    )
    op.create_unique_constraint(
        op.f("uq_achievements_order"),
        "achievements",
        ["order"],
    )
    op.add_column(
        "activities",
        sa.Column(
            "order",
            sa.Float(),
            server_default=sa.text("nextval('activities_order_seq')"),
            nullable=False,
        ),
    )
    op.create_unique_constraint(op.f("uq_activities_order"), "activities", ["order"])
    op.add_column(
        "participants",
        sa.Column(
            "order",
            sa.Float(),
            server_default=sa.text("nextval('participants_order_seq')"),
            nullable=False,
        ),
    )
    op.create_unique_constraint(
        op.f("uq_participants_order"),
        "participants",
        ["order"],
    )
    op.add_column(
        "schedule",
        sa.Column(
            "order",
            sa.Float(),
            server_default=sa.text("nextval('schedule_order_seq')"),
            nullable=False,
        ),
    )
    op.drop_constraint("uq_schedule_position", "schedule", type_="unique")
    op.create_unique_constraint(
        op.f("uq_schedule_order"),
        "schedule",
        ["order"],
        deferrable="True",
        initially="DEFERRED",
    )
    op.drop_column("schedule", "position")
    op.execute("DROP SEQUENCE schedule_position_seq")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SEQUENCE schedule_position_seq")
    op.add_column(
        "schedule",
        sa.Column(
            "position",
            sa.DOUBLE_PRECISION(precision=53),
            server_default=sa.text("nextval('schedule_position_seq'::regclass)"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(op.f("uq_schedule_order"), "schedule", type_="unique")
    op.create_unique_constraint("uq_schedule_position", "schedule", ["position"])
    op.drop_column("schedule", "order")
    op.drop_constraint(op.f("uq_participants_order"), "participants", type_="unique")
    op.drop_column("participants", "order")
    op.drop_constraint(op.f("uq_activities_order"), "activities", type_="unique")
    op.drop_column("activities", "order")
    op.drop_constraint(op.f("uq_achievements_order"), "achievements", type_="unique")
    op.drop_column("achievements", "order")
    op.execute("DROP SEQUENCE achievements_order_seq")
    op.execute("DROP SEQUENCE activities_order_seq")
    op.execute("DROP SEQUENCE schedule_order_seq")
    op.execute("DROP SEQUENCE participants_order_seq")
    # ### end Alembic commands ###
