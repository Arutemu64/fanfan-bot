import time

from fanfan.core.exceptions.base import AppException
from fanfan.core.utils.pluralize import SECONDS_PLURALS, pluralize


class EventsException(AppException):
    pass


class EventNotFound(EventsException):
    message = "‚ö†Ô∏è –í—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

    def __init__(self, event_id: int | None = None) -> None:
        if isinstance(event_id, int):
            self.message = f"‚ö†Ô∏è –í—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {event_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"


class NoCurrentEvent(EventNotFound):
    message = "‚ö†Ô∏è –¢–µ–∫—É—â–µ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"


class NoNextEvent(EventNotFound):
    message = "üëè –í—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ä–∞–±–æ—Ç—É! –£–≤–∏–¥–∏–º—Å—è! üòâ"


class AnnounceTooFast(EventsException):
    def __init__(self, announcement_timeout: int, old_timestamp: float) -> None:
        time_left = int(old_timestamp + announcement_timeout - time.time())
        self.message = (
            f"‚ö†Ô∏è –° –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∞–Ω–æ–Ω—Å–∞ –Ω–µ –ø—Ä–æ—à–ª–æ {announcement_timeout} "
            f"{pluralize(announcement_timeout, SECONDS_PLURALS)}!\n"
            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ "
            f"{time_left} {pluralize(time_left, SECONDS_PLURALS)}."
        )


class CurrentEventNotAllowed(EventsException):
    message = "‚ö†Ô∏è –≠—Ç–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–∫—É—â–∏–º"


class SkippedEventNotAllowed(EventsException):
    message = "‚ö†Ô∏è –≠—Ç–æ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ"


class SameEventsAreNotAllowed(EventsException):
    message = "‚ö†Ô∏è –í—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–µ –º–æ–≥—É—Ç —Å–æ–≤–ø–∞–¥–∞—Ç—å"
