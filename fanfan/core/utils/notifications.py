import html

from aiogram.utils.keyboard import InlineKeyboardBuilder

from fanfan.core.dto.notification import UserNotification
from fanfan.core.exceptions.base import AppException
from fanfan.core.models.achievement import Achievement
from fanfan.core.models.feedback import FeedbackFull
from fanfan.core.utils.pluralize import Plurals, pluralize
from fanfan.presentation.tgbot.keyboards.buttons import (
    DELETE_BUTTON,
    PULL_DOWN_DIALOG,
    process_feedback_button,
    show_user_info_button,
)


def create_achievement_notification(achievement: Achievement) -> UserNotification:
    return UserNotification(
        title="üèÜ –ù–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ",
        text=f"–¢—ã –ø–æ–ª—É—á–∏–ª –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ <b>{achievement.title}</b>",
    )


def create_points_notification(points: int, comment: str | None) -> UserNotification:
    points_pluralized = pluralize(points, Plurals("–æ—á–∫–æ", "–æ—á–∫–∞", "–æ—á–∫–æ–≤"))
    text = f"–¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª <b>{points} {points_pluralized}</b>"
    if comment:
        text += f"\n\n<blockquote>{comment}</blockquote>"
    return UserNotification(
        title="üí∞ –¢—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª –æ—á–∫–∏",
        text=text,
    )


def create_feedback_notification(feedback: FeedbackFull) -> UserNotification:
    bottom_text = (
        "‚öôÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –≤ –ª–∏—á–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.\n"
        "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–æ–∂–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏, "
        "–æ—Ç–æ–∑–≤–∞–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ can_send_feedback —á–µ—Ä–µ–∑ –æ—Ä–≥-–ø–∞–Ω–µ–ª—å.\n"
    )
    if feedback.processed_by is None:
        bottom_text += "üôã –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –≥–æ—Ç–æ–≤—ã –≤–∑—è—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–∑—ã–≤–∞ –Ω–∞ —Å–µ–±—è."
        reply_markup = InlineKeyboardBuilder(
            [
                [process_feedback_button(feedback_id=feedback.id)],
                [show_user_info_button(user_id=feedback.user_id)],
                [PULL_DOWN_DIALOG],
            ]
        ).as_markup()
    else:
        bottom_text += f"‚úÖ @{feedback.processed_by.username} –≤–∑—è–ª –æ—Ç–∑—ã–≤ –≤ —Ä–∞–±–æ—Ç—É."
        reply_markup = InlineKeyboardBuilder(
            [
                [show_user_info_button(user_id=feedback.user_id)],
                [PULL_DOWN_DIALOG],
            ]
        ).as_markup()
    return UserNotification(
        title="üí¨ –û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨",
        text=f"–ü–æ—Å—Ç—É–ø–∏–ª–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å "
        f"–æ—Ç @{feedback.user.username} ({feedback.user_id}):\n\n"
        f"<blockquote>{html.escape(feedback.text)}</blockquote>",
        bottom_text=bottom_text,
        reply_markup=reply_markup,
    )


def create_app_exception_notification(app_exception: AppException) -> UserNotification:
    return UserNotification(
        title="‚ö†Ô∏è –û–®–ò–ë–ö–ê",
        text=app_exception.message,
        reply_markup=InlineKeyboardBuilder([[DELETE_BUTTON]]).as_markup(),
    )


def create_exception_notification(exception: Exception) -> UserNotification:
    return UserNotification(
        title="‚ö†Ô∏è –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê",
        text=f"–í–æ–∑–Ω–∏–∫–ª–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ ({type(exception).__name__}). "
        f"–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –∞ –ø–æ–∫–∞ "
        f"–º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start "
        f"–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑",
        reply_markup=InlineKeyboardBuilder([[DELETE_BUTTON]]).as_markup(),
    )
