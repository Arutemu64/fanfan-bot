"""final_quest.

Revision ID: 006
Revises: 005
Create Date: 2024-04-08 19:36:49.872625

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "006"
down_revision = "005"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("transactions")
    op.drop_column("users", "points")
    op.add_column("achievements", sa.Column("secret_id", sa.UUID(), nullable=True))
    op.create_unique_constraint(
        op.f("uq_achievements_secret_id"),
        "achievements",
        ["secret_id"],
    )
    op.execute("UPDATE achievements SET secret_id = gen_random_uuid ()")
    op.alter_column("achievements", "secret_id", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "points",
            sa.INTEGER(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(
        op.f("uq_achievements_secret_id"),
        "achievements",
        type_="unique",
    )
    op.drop_column("achievements", "secret_id")
    op.create_table(
        "transactions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("from_user_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("to_user_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("points_added", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "achievement_id_added",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_on",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_on",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["achievement_id_added"],
            ["achievements.id"],
            name="fk_transactions_achievement_id_added_achievements",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["from_user_id"],
            ["users.id"],
            name="fk_transactions_from_user_id_users",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["to_user_id"],
            ["users.id"],
            name="fk_transactions_to_user_id_users",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="pk_transactions"),
    )
    # ### end Alembic commands ###
